pmml.ksvm                package:pmml                R Documentation

_G_e_n_e_r_a_t_e _P_M_M_L _f_o_r _a _k_s_v_m _o_b_j_e_c_t

_D_e_s_c_r_i_p_t_i_o_n:

     Generate the PMML representation for a ksvm object (SVM). The PMML
     can then be imported into other systems that accept PMML.  With
     this code, a PMML representation can be obtained for SVMs
     implementing classification (multi-class and binary) as well as
     regression.

_U_s_a_g_e:

     ## S3 method for class 'ksvm':
     pmml(model, model.name="SVM_model", app.name="Rattle/PMML",
          description="Support Vector Machine PMML Model", copyright=NULL,
          data.name, ...)

_A_r_g_u_m_e_n_t_s:

   model: a ksvm object.

data.name: the name of the data object used to train the SVM model in
          ksvm - required since the ksvm object does not appear to
          record information about the used categorical variables.

model.name: a name to give to the model in the PMML.

app.name: the name of the application that generated the PMML.

description: a descriptive text for the header of the PMML.

copyright: the copyright notice for the model.

     ...: further arguments passed to or from other methods.

_D_e_t_a_i_l_s:

     The generated PMML can be imported into any PMML consuming
     application that recognizes PMML 3.2. An example is ADAPA
     (Adaptive Decision and Predictive Analytics), a lightweight
     decision engine with batch and real-time scoring of predictive
     models (also supporting neural networks and linear and logistic
     regression).

_A_u_t_h_o_r(_s):

     info@zementis.com

_R_e_f_e_r_e_n_c_e_s:

     Package home page: <URL: http://rattle.togaware.com>

     PMML home page: <URL: http://www.dmg.org>

     Zementis' useful PMML convert: <URL:
     http://www.zementis.com/pmml_converters.htm>

     ADAPA home page: <URL: http://www.zementis.com/adapa.htm>

_S_e_e _A_l_s_o:

     'pmml'. 'ksvm'.

_E_x_a_m_p_l_e_s:

     # Train a support vector machine to perform binary classification.
     require(kernlab)
     data(spam)
     index <- sample(1:dim(spam)[1])
     ds <- spam[index[1:300],] # For illustration only use a small dataset.
     fit <- ksvm(type~., data=ds, kenrel="rbfdot")

     # Genetate the PMML.
     pmml(fit, data=ds)

