pmml.rpart               package:pmml               R Documentation

_G_e_n_e_r_a_t_e _P_M_M_L _f_o_r _a_n _r_p_a_r_t _o_b_j_e_c_t

_D_e_s_c_r_i_p_t_i_o_n:

     Generate the PMML (Predictive Model Markup Language)
     representation of an 'rpart' object (classification tree).  The
     rpart object (currently expected to be a classification tree) is
     converted into a PMML representation. The PMML can then be
     imported into other systems that accept PMML.

_U_s_a_g_e:

     ## S3 method for class 'rpart':
     pmml(model, model.name="RPart_Model", app.name="Rattle/PMML",
          description="RPart decision tree model", copyright=NULL, ...)

_A_r_g_u_m_e_n_t_s:

   model: an rpart object.

model.name: a name to give to the model in the PMML.

app.name: the name of the application that generated the PMML.

description: a descriptive text for the header of the PMML.

copyright: the copyright notice for the model.

     ...: further arguments passed to or from other methods.

_D_e_t_a_i_l_s:

     The generated PMML can be imported into any PMML consuming
     application, such as Teradata Warehouse Miner and DB2. Generally,
     these applications convert the PMML into SQL for execution across
     a database.

     Teradata, for example, generates a single SELECT statement to
     implement a decision tree. In the Examples section below, we use
     the rpart example to build a model stored in the variable fit. A
     segment of the PMML for this model is:


       <Node score="absent" recordCount="81">
        <True/>
        <Node score="absent" recordCount="62">
         <SimplePredicate field="Start" operator="greaterOrEqual"
                          value="8.5"/>
         <Node score="absent" recordCount="29">
          <SimplePredicate field="Start" operator="greaterOrEqual"
                           value="14.5"/>
         </Node>
         <Node score="absent" recordCount="33">
          <SimplePredicate field="Start" operator="lessThan"
                           value="14.5"/>
          <Node score="absent" recordCount="12">
           <SimplePredicate field="Age" operator="lessThan"
                            value="55"/>
          </Node>
          <Node score="absent" recordCount="21">
           <SimplePredicate field="Age" operator="greaterOrEqual" 
                           value="55"/>
           <Node score="absent" recordCount="14">
            <SimplePredicate field="Age" operator="greaterOrEqual"
                             value="111"/>
           </Node>
           <Node score="present" recordCount="7">
            <SimplePredicate field="Age" operator="lessThan"
                             value="111"/>
           </Node>
          </Node>
         </Node>
        </Node>
        <Node score="present" recordCount="19">
         <SimplePredicate field="Start" operator="lessThan"
                          value="8.5"/>
        </Node>
       </Node>

     The resulting SQL from Teradata includes:


       CREATE TABLE "MyScores" AS (
         SELECT "UserID",
           (CASE WHEN _node = 0 THEN 'absent'
                 WHEN _node = 1 THEN 'absent'
                 WHEN _node = 2 THEN 'absent'
                 WHEN _node = 3 THEN 'present'
                 WHEN _node = 4 THEN 'present'
                 ELSE NULL END)
                 (VARCHAR(8)) AS "Kyphosis"
         FROM
           (SELECT "UserID",
             (CASE WHEN ("Start" >= 8.5) AND ("Start" >= 14.5)
                   THEN 0
                   WHEN ("Start" >= 8.5) AND ("Start" < 14.5)
                   AND ("Age" < 55)
                   THEN 1
                   WHEN ("Start" >= 8.5) AND ("Start" < 14.5)
                   AND ("Age" >= 55) AND ("Age" >= 111)
                   THEN 2
                   WHEN ("Start" >= 8.5) AND ("Start" < 14.5)
                   AND ("Age" >= 55) AND ("Age" < 111)
                   THEN 3
                   WHEN ("Start" < 8.5)
                   THEN 4
                   ELSE -1 END) AS _node
             FROM "MyData" WHERE _node IS NOT NULL) A
             WHERE "Kyphosis" IS NOT NULL)
         WITH DATA UNIQUE PRIMARY INDEX ("UserID");


_A_u_t_h_o_r(_s):

     Graham.Williams@togaware.com

_R_e_f_e_r_e_n_c_e_s:

     Package home page: <URL: http://rattle.togaware.com>

     PMML home page: <URL: http://www.dmg.org>

     Zementis' useful PMML convert: <URL:
     http://www.zementis.com/pmml_converters.htm>

_S_e_e _A_l_s_o:

     'pmml'.

_E_x_a_m_p_l_e_s:

     library(rpart)
     fit <- rpart(Kyphosis ~ Age + Number + Start, data=kyphosis)
     pmml(fit)

